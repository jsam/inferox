#!/bin/bash
set -e

# Inferox Coverage Analysis Script
# Analyzes coverage reports generated by cargo-tarpaulin

echo "🔍 Inferox Coverage Analysis"
echo "============================"

# Check if jq is available
if ! command -v jq &> /dev/null; then
    echo "❌ jq is required for JSON parsing. Please install it."
    exit 1
fi

# Check if bc is available
if ! command -v bc &> /dev/null; then
    echo "❌ bc is required for calculations. Please install it."
    exit 1
fi

# Check if coverage report exists
if [ ! -f "target/coverage/tarpaulin-report.json" ]; then
    echo "❌ Coverage report not found at target/coverage/tarpaulin-report.json"
    exit 1
fi

# Parse overall coverage
OVERALL_COVERAGE=$(jq -r '.coverage' target/coverage/tarpaulin-report.json)
echo "📈 Overall Coverage: ${OVERALL_COVERAGE}%"

# Analyze crate-specific coverage
echo ""
echo "🎯 Crate Coverage Analysis:"
echo "==========================="

# Core library
CORE_COVERAGE=$(jq -r '.files[] | select((.path | type == "string" and test("crates/inferox-core")) or (.path | type == "array" and (. | join("/") | test("crates/inferox-core")))) | .coverage' target/coverage/tarpaulin-report.json 2>/dev/null | awk '{sum+=$1; count++} END {if(count>0) printf "%.1f", sum/count; else print "0"}')
echo "📦 inferox-core: ${CORE_COVERAGE}%"

# Candle backend
CANDLE_COVERAGE=$(jq -r '.files[] | select((.path | type == "string" and test("crates/inferox-candle")) or (.path | type == "array" and (. | join("/") | test("crates/inferox-candle")))) | .coverage' target/coverage/tarpaulin-report.json 2>/dev/null | awk '{sum+=$1; count++} END {if(count>0) printf "%.1f", sum/count; else print "0"}')
echo "🔥 inferox-candle: ${CANDLE_COVERAGE}%"

# Engine
ENGINE_COVERAGE=$(jq -r '.files[] | select((.path | type == "string" and test("crates/inferox-engine")) or (.path | type == "array" and (. | join("/") | test("crates/inferox-engine")))) | .coverage' target/coverage/tarpaulin-report.json 2>/dev/null | awk '{sum+=$1; count++} END {if(count>0) printf "%.1f", sum/count; else print "0"}')
echo "⚙️  inferox-engine: ${ENGINE_COVERAGE}%"

echo ""
echo "📋 Summary:"
echo "==========="
echo "• Overall: ${OVERALL_COVERAGE}%"
echo "• Threshold: 65%"

# Check threshold
if (( $(echo "$OVERALL_COVERAGE < 65" | bc -l) )); then
    echo "❌ Coverage is below 65% threshold"
    
    echo ""
    echo "🔍 Files needing attention (coverage < 65%):"
    jq -r '.files[] | select(.coverage < 65) | if .path | type == "array" then "  \(.path | join("/")): \(.coverage)%" else "  \(.path): \(.coverage)%" end' target/coverage/tarpaulin-report.json 2>/dev/null | head -10
    
    exit 1
else
    echo "✅ Coverage meets 65% threshold"
fi

echo ""
echo "📄 Detailed reports:"
echo "  HTML: target/coverage/tarpaulin-report.html"
echo "  JSON: target/coverage/tarpaulin-report.json"
echo "  XML:  target/coverage/tarpaulin-report.xml"
